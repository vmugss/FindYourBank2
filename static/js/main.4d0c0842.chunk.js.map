{"version":3,"sources":["components/columns.js","components/ColumnFilter.js","components/BankTable.js","components/BankDetails.js","App.js","index.js"],"names":["COLUMNS","Header","accessor","ColumnFilter","column","filterValue","setFilter","useState","value","setValue","onChange","useAsyncDebounce","undefined","placeholder","e","target","BankTable","data","setSelectedRow","columns","useMemo","defaultColumn","Filter","history","useHistory","useTable","useFilters","usePagination","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","state","gotoPage","pageCount","setPageSize","prepareRow","pageIndex","pageSize","class","Table","bordered","hover","responsive","dark","style","tableLayout","map","headerGroup","getHeaderGroupProps","headers","render","canFilter","row","i","getRowProps","onClick","push","values","ifsc","handleRowClick","cells","cell","getCellProps","length","type","defaultValue","pageNumber","Number","width","disabled","BankDetails","useParams","ifsc_code","Container","marginTop","bank_name","ListGroup","ListGroupItem","ListGroupItemHeading","ListGroupItemText","branch","bank_id","address","App","setData","loading","setLoading","error","setError","city","setCity","selectedRow","useEffect","a","axios","get","toUpperCase","res","status","Error","message","fetchData","className","exact","path","to","id","title","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4d0c0842.chunk.js","sourcesContent":["export const COLUMNS = [\r\n    // {\r\n    //     Header: 'City',\r\n    //     accessor: 'city'\r\n    // },\r\n    // {\r\n    //     Header: 'District',\r\n    //     accessor: 'district'\r\n    // },\r\n    // {\r\n    //     Header: 'State',\r\n    //     accessor: 'state'\r\n    // },\r\n    {\r\n        Header: 'Bank Name',\r\n        accessor: 'bank_name'\r\n    },\r\n    {\r\n        Header: 'IFSC Code',\r\n        accessor: 'ifsc'\r\n    },\r\n    {\r\n        Header: 'Branch',\r\n        accessor: 'branch'\r\n    },\r\n    {\r\n        Header: 'Bank ID',\r\n        accessor: 'bank_id'\r\n    },\r\n    {\r\n        Header: 'Address',\r\n        accessor: 'address'\r\n    }\r\n]","import React, { useState } from 'react';\r\nimport { useAsyncDebounce } from 'react-table';\r\n\r\nexport const ColumnFilter = ({ column }) => {\r\n    const { filterValue, setFilter } = column;\r\n    const [ value, setValue ] = useState(filterValue);\r\n\r\n    const onChange = useAsyncDebounce(value => {\r\n        setFilter(value || undefined )\r\n    }, 1000)\r\n\r\n    return(\r\n        <span>\r\n            <input value={value || ''} \r\n            placeholder='Search'\r\n            onChange = {(e) => {\r\n                setValue(e.target.value);\r\n                onChange(e.target.value);\r\n            }} />\r\n        </span>\r\n    )\r\n}","import React, { useMemo, useState } from 'react';\r\nimport { useTable, usePagination, useFilters } from 'react-table';\r\nimport { COLUMNS } from './columns';\r\nimport { Table } from 'reactstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './BankTable.css';\r\nimport { ColumnFilter } from './ColumnFilter';\r\n\r\nexport const BankTable = ({ data, setSelectedRow }) => {\r\n    const columns = useMemo(() => COLUMNS, []);\r\n    const defaultColumn = useMemo(() => {\r\n        return {\r\n            Filter: ColumnFilter\r\n        }\r\n    }, []);\r\n\r\n    const history = useHistory();\r\n    const handleRowClick = (row) => {\r\n        history.push(`/bank_details/${row.values.ifsc}`);\r\n      } \r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        page,\r\n        nextPage,\r\n        previousPage,\r\n        canNextPage,\r\n        canPreviousPage,\r\n        pageOptions,\r\n        state,\r\n        gotoPage,\r\n        pageCount,\r\n        setPageSize,\r\n        setFilter,\r\n        prepareRow\r\n      } = useTable({\r\n        columns,\r\n        data,\r\n        defaultColumn\r\n    }, \r\n    useFilters,\r\n    usePagination)\r\n\r\n    const { pageIndex, pageSize } = state;\r\n    return(\r\n        <>\r\n        <div class=\"fixTableHead\">\r\n        <Table bordered hover responsive dark style={{width:'600px'},{tableLayout: 'fixed'}} {...getTableProps()}>\r\n            <thead>\r\n            {headerGroups.map(headerGroup => (\r\n                <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                    <th>\r\n                        {column.render('Header')}\r\n                        <div>\r\n                            {column.canFilter ? column.render('Filter') : null}\r\n                        </div>\r\n                    </th>\r\n                ))}\r\n                </tr>\r\n            ))}\r\n            </thead>\r\n            <tbody {...getTableBodyProps()}>\r\n                {page.map((row, i) => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()} onClick={()=> {\r\n                            handleRowClick(row);\r\n                            setSelectedRow(row.values)}}>\r\n                            {row.cells.map(cell => {\r\n                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                            })}\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </Table>\r\n        </div>\r\n            <div class=\"paginationDiv\">\r\n                <span class=\"paginationItems\">\r\n                    Page {' '}\r\n                    <strong>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </strong> {' '}\r\n                </span>\r\n                <span class=\"paginationItems\">\r\n                    | Go to page: {' '}\r\n                    <input type='number' defaultValue={pageIndex + 1}\r\n                    onChange = { e => {\r\n                        const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0;\r\n                        gotoPage(pageNumber)\r\n                    }} \r\n                    style ={{width: '50px'}}/>\r\n                </span>\r\n                \r\n                <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n                    {'<<'}\r\n                </button>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous\r\n                </button>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next\r\n                </button>\r\n                <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n                    {'>>'}\r\n                </button>\r\n                <select class=\"paginationItems\" value={pageSize} onChange={e=>{\r\n                    setPageSize(Number(e.target.value))\r\n                }}>\r\n                    {[10, 20, 30].map(pageSize => (\r\n                        <option key={pageSize} value={pageSize}>\r\n                            Show {pageSize} rows\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n        </>\r\n    )\r\n};","import { useParams } from \"react-router-dom\";\r\nimport { Container,ListGroup, ListGroupItem, ListGroupItemHeading, ListGroupItemText } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst BankDetails = ({ data }) => {\r\n    const { ifsc_code } = useParams();\r\n    return(\r\n        <Container style={{marginTop: 35}}>\r\n            <h3><strong>{data.bank_name}</strong></h3>\r\n            <ListGroup style={{marginTop:50}}>\r\n                <ListGroupItem>\r\n                    <ListGroupItemHeading>Branch</ListGroupItemHeading>\r\n                    <ListGroupItemText>{data.branch} </ListGroupItemText>\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                    <ListGroupItemHeading>IFSC</ListGroupItemHeading>\r\n                    <ListGroupItemText>{data.ifsc} </ListGroupItemText>\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                    <ListGroupItemHeading>Bank ID</ListGroupItemHeading> \r\n                    <ListGroupItemText>{data.bank_id}</ListGroupItemText>\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                    <ListGroupItemHeading>Address</ListGroupItemHeading> \r\n                    <ListGroupItemText>{data.address}</ListGroupItemText>\r\n                </ListGroupItem>\r\n            </ListGroup>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default BankDetails;","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { BankTable } from './components/BankTable';\r\nimport { Container } from 'reactstrap';\r\nimport BankDetails from './components/BankDetails';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst App = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [city, setCity] = useState('MUMBAI');\r\n  const [selectedRow, setSelectedRow] = useState({});\r\n\r\n  useEffect(()=>{\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const res = await axios.get(`https://vast-shore-74260.herokuapp.com/banks?city=${city.toUpperCase()}`);\r\n         if (res.status !== 200){\r\n           throw Error ('Could not fetch data');\r\n         }\r\n        setData(res.data);\r\n        setError(null);\r\n        setLoading(false);\r\n      }\r\n      catch(err){\r\n        setLoading(false);\r\n        setError(err.message);\r\n      }\r\n    }\r\n    fetchData();\r\n  },[city]);\r\n\r\n  return (\r\n//    <Router basename={process.env.PUBLIC_URL}>\r\n      <div className=\"content\">\r\n        <Switch>\r\n        <Route exact path=\"/\"\r\n          render={() => {\r\n              return (\r\n                <Redirect to=\"/all_banks\" /> \r\n              )\r\n          }\r\n        }/>\r\n          <Route path=\"/all_banks\">\r\n            <Container style={{marginTop: 35}}>\r\n              <h2><strong>All Banks</strong></h2>\r\n              { error && \r\n                    <div>{ error }</div>\r\n                }\r\n              { loading && \r\n                    <div id=\"cover-spin\"></div>\r\n                }\r\n                \r\n              { data && \r\n                <div style={{marginTop: 25}}>\r\n                  <select class=\"inputElement\" value={city} onChange={e=>{\r\n                        setCity(e.target.value);\r\n                    }}>\r\n                        {['Mumbai', 'Kolkata', 'Bangalore', 'Delhi', 'Kochi'].map(city => (\r\n                            <option key={city} value={city}>\r\n                                {city}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                  <BankTable data={data} setSelectedRow={setSelectedRow}  title=\"All Banks\"/>\r\n                </div>\r\n                }\r\n            </Container>\r\n          </Route>\r\n          <Route path=\"/bank_details/:ifsc_code\">\r\n              <BankDetails data={selectedRow}/>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n//    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter as Router} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />,\r\n </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}